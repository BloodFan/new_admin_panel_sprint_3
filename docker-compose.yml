services:

  etl:
    build:
      context: . 
      dockerfile: docker/dev/etl/Dockerfile
    volumes:
      - ./etl/:/opt/etl/
      - etl_postgres_socket:/postgres_socket
      - etl_postgres_data:/var/lib/postgresql/data/
      - redis_socket:/redis_socket
    ports:
      - "8000:8000"
    env_file:
      - docker/dev/env/.db.env
      - docker/dev/env/.redis.env
    depends_on: [db, elasticsearch, redis]
    restart: unless-stopped
    networks:
      - theatre_network

  elasticsearch:
    image: elasticsearch:8.6.2
    # depends_on: [db, ]
    # command: ["/es/index.sh", ]
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms200m -Xmx200m
    # volumes:
    #     - ./docker/dev/es:/es
    networks:
      - theatre_network
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

  redis:
    image: redis:7.4.0-alpine
    restart: always
    command: ["/var/lib/redis/redis.conf"]
    volumes:
      - ./docker/dev/redis/redis.conf:/var/lib/redis/redis.conf
      - redis_data:/data
      - redis_socket:/redis_socket
    networks:
      - theatre_network

  db:
    hostname: theatre-db
    image: postgres:15.1-alpine
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - ./database_dump.sql:/docker-entrypoint-initdb.d/init.sql
      - ./docker/dev/db/pg.conf:/etc/postgresql/postgresql.conf
      - etl_postgres_data:/var/lib/postgresql/data/
      - etl_postgres_socket:/var/run/postgresql/
    env_file:
      - docker/dev/env/.db.env
    networks:
      - theatre_network


volumes:
  redis_data:
  redis_socket:
  etl_postgres_data:
  etl_postgres_socket:

networks:
  theatre_network:
    driver: bridge